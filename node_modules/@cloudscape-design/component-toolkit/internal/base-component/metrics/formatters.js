// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
// React is the only framework we're using.
var framework = 'react';
export function buildMetricDetail(_a, theme) {
    var source = _a.source, action = _a.action, version = _a.version, configuration = _a.configuration;
    var metricOrigin = typeof AWSUI_METRIC_ORIGIN !== 'undefined' ? AWSUI_METRIC_ORIGIN : 'main';
    var detailObject = {
        o: metricOrigin,
        s: source,
        t: theme,
        a: action,
        f: framework,
        v: formatMajorVersionForMetricDetail(version),
        c: configuration
    };
    return jsonStringify(detailObject);
}
export function jsonStringify(detailObject) {
    return JSON.stringify(detailObject, detailSerializer);
}
function detailSerializer(key, value) {
    // Report NaN and Infinity as strings instead of `null` (default behavior)
    if (typeof value === 'number' && !Number.isFinite(value)) {
        return "".concat(value);
    }
    return value;
}
export function buildMetricName(_a, theme) {
    var source = _a.source, version = _a.version;
    return ['awsui', source, "".concat(formatVersionForMetricName(theme, version))].join('_');
}
export function formatMajorVersionForMetricDetail(version) {
    return version.replace(/\s/g, '');
}
export function formatVersionForMetricName(theme, version) {
    return "".concat(theme.charAt(0)).concat(getMajorVersion(version).replace('.', ''));
}
function getMajorVersion(versionString) {
    var majorVersionMatch = versionString.match(/^(\d+\.\d+)/);
    return majorVersionMatch ? majorVersionMatch[1] : '';
}

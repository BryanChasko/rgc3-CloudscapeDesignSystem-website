import { __rest } from "tslib";
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import React from 'react';
import useBaseComponent from '../internal/hooks/use-base-component';
import { useInternalI18n } from '../i18n/context';
import { getBaseProps } from '../internal/base-component';
import { applyDisplayName } from '../internal/utils/apply-display-name';
import { AppLayoutInternal } from './internal';
const AppLayout = React.forwardRef((_a, ref) => {
    var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
    var { contentType = 'default', headerSelector = '#b #h', footerSelector = '#b #f' } = _a, rest = __rest(_a, ["contentType", "headerSelector", "footerSelector"]);
    const { __internalRootRef } = useBaseComponent('AppLayout', {
        props: {
            contentType,
            disableContentPaddings: rest.disableContentPaddings,
            disableBodyScroll: rest.disableBodyScroll,
            navigationWidth: rest.navigationWidth,
            navigationHide: rest.navigationHide,
            toolsHide: rest.toolsHide,
            toolsWidth: rest.toolsWidth,
            maxContentWidth: rest.maxContentWidth,
            minContentWidth: rest.minContentWidth,
            stickyNotifications: rest.stickyNotifications,
            disableContentHeaderOverlap: rest.disableContentHeaderOverlap,
        },
    });
    const i18n = useInternalI18n('app-layout');
    const ariaLabels = {
        navigation: i18n('ariaLabels.navigation', (_b = rest.ariaLabels) === null || _b === void 0 ? void 0 : _b.navigation),
        navigationClose: i18n('ariaLabels.navigationClose', (_c = rest.ariaLabels) === null || _c === void 0 ? void 0 : _c.navigationClose),
        navigationToggle: i18n('ariaLabels.navigationToggle', (_d = rest.ariaLabels) === null || _d === void 0 ? void 0 : _d.navigationToggle),
        notifications: i18n('ariaLabels.notifications', (_e = rest.ariaLabels) === null || _e === void 0 ? void 0 : _e.notifications),
        tools: i18n('ariaLabels.tools', (_f = rest.ariaLabels) === null || _f === void 0 ? void 0 : _f.tools),
        toolsClose: i18n('ariaLabels.toolsClose', (_g = rest.ariaLabels) === null || _g === void 0 ? void 0 : _g.toolsClose),
        toolsToggle: i18n('ariaLabels.toolsToggle', (_h = rest.ariaLabels) === null || _h === void 0 ? void 0 : _h.toolsToggle),
        drawers: i18n('ariaLabels.drawers', (_j = rest.ariaLabels) === null || _j === void 0 ? void 0 : _j.drawers),
        drawersOverflow: i18n('ariaLabels.drawersOverflow', (_k = rest.ariaLabels) === null || _k === void 0 ? void 0 : _k.drawersOverflow),
        drawersOverflowWithBadge: i18n('ariaLabels.drawersOverflowWithBadge', (_l = rest.ariaLabels) === null || _l === void 0 ? void 0 : _l.drawersOverflowWithBadge),
    };
    // This re-builds the props including the default values
    const props = Object.assign(Object.assign({ contentType, headerSelector, footerSelector }, rest), { ariaLabels });
    const baseProps = getBaseProps(rest);
    return (React.createElement("div", Object.assign({ ref: __internalRootRef }, baseProps),
        React.createElement(AppLayoutInternal, Object.assign({ ref: ref }, props))));
});
applyDisplayName(AppLayout, 'AppLayout');
export default AppLayout;
//# sourceMappingURL=index.js.map
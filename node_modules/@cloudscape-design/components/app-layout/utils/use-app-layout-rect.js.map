{"version":3,"file":"use-app-layout-rect.js","sourceRoot":"","sources":["../../../../src/app-layout/utils/use-app-layout-rect.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,iBAAiB,EAAE,MAAM,+CAA+C,CAAC;AAClF,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAQzD,MAAM,CAAC,OAAO,UAAU,gBAAgB,CAAC,OAA8B;IACrE,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAE/F,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE;QACtC,8BAA8B;QAC9B,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE;YAC1C,OAAO;SACR;QACD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;QACxD,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;QAE5C,UAAU,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,GAAG,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;IACnE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAEd,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QAClD,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;IACpE,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;IAErB,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IACzD,iBAAiB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;IAE9C,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { useCallback, useEffect, useState } from 'react';\n\ninterface AppLayoutRect {\n  left: number;\n  right: number;\n  width: number;\n}\n\nexport default function useAppLayoutRect(element: HTMLDivElement | null): AppLayoutRect {\n  const [offsets, setOffsets] = useState({ left: 0, right: 0, width: Number.POSITIVE_INFINITY });\n\n  const updatePosition = useCallback(() => {\n    // skip reading sizes in JSDOM\n    if (!element || !document.body.clientWidth) {\n      return;\n    }\n    const { left, right } = element.getBoundingClientRect();\n    const bodyWidth = document.body.clientWidth;\n\n    setOffsets({ left, right: bodyWidth - right, width: bodyWidth });\n  }, [element]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updatePosition);\n    return () => window.removeEventListener('resize', updatePosition);\n  }, [updatePosition]);\n\n  const getElement = useCallback(() => element, [element]);\n  useResizeObserver(getElement, updatePosition);\n\n  return offsets;\n}\n"]}
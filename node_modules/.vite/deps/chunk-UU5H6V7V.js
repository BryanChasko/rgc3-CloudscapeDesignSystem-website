import {
  AbstractSwitch
} from "./chunk-GMWSECVM.js";
import {
  checkbox_icon_default
} from "./chunk-TM4M7DBC.js";
import {
  useFormFieldContext
} from "./chunk-RGNJKKON.js";
import {
  useForwardFocus
} from "./chunk-YTRJQH4M.js";
import {
  useSingleTabStopNavigation
} from "./chunk-KYLY6TIG.js";
import {
  fireNonCancelableEvent
} from "./chunk-T3BYYNEM.js";
import {
  __rest,
  clsx_m_default,
  getBaseProps
} from "./chunk-CHBULPAM.js";
import {
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/@cloudscape-design/components/checkbox/internal.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/checkbox/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/checkbox/styles.scoped.css";
var styles_css_default = {
  "root": "awsui_root_k2y2q_16s24_99",
  "checkbox-control": "awsui_checkbox-control_k2y2q_16s24_135",
  "outline": "awsui_outline_k2y2q_16s24_143"
};

// node_modules/@cloudscape-design/components/checkbox/internal.js
var InternalCheckbox = import_react.default.forwardRef((_a, ref) => {
  var { controlId, name, checked, disabled, ariaRequired, indeterminate, children, description, ariaLabel, onFocus, onBlur, onChange, tabIndex: explicitTabIndex, showOutline, ariaControls, __internalRootRef } = _a, rest = __rest(_a, ["controlId", "name", "checked", "disabled", "ariaRequired", "indeterminate", "children", "description", "ariaLabel", "onFocus", "onBlur", "onChange", "tabIndex", "showOutline", "ariaControls", "__internalRootRef"]);
  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);
  const baseProps = getBaseProps(rest);
  const checkboxRef = (0, import_react.useRef)(null);
  useForwardFocus(ref, checkboxRef);
  (0, import_react.useEffect)(() => {
    if (checkboxRef.current) {
      checkboxRef.current.indeterminate = Boolean(indeterminate);
    }
  });
  const { tabIndex } = useSingleTabStopNavigation(checkboxRef, { tabIndex: explicitTabIndex });
  return import_react.default.createElement(AbstractSwitch, Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, baseProps.className), controlClassName: styles_css_default["checkbox-control"], outlineClassName: styles_css_default.outline, controlId, disabled, label: children, description, descriptionBottomPadding: true, ariaLabel, ariaLabelledby, ariaDescribedby, ariaControls, showOutline, nativeControl: (nativeControlProps) => import_react.default.createElement("input", Object.assign({}, nativeControlProps, {
    ref: checkboxRef,
    type: "checkbox",
    checked,
    name,
    "aria-required": ariaRequired ? "true" : void 0,
    tabIndex,
    onFocus: () => fireNonCancelableEvent(onFocus),
    onBlur: () => fireNonCancelableEvent(onBlur),
    // empty handler to suppress React controllability warning
    onChange: () => {
    }
  })), onClick: () => {
    var _a2;
    (_a2 = checkboxRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    fireNonCancelableEvent(
      onChange,
      // for deterministic transitions "indeterminate" -> "checked" -> "unchecked"
      indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false }
    );
  }, styledControl: import_react.default.createElement(checkbox_icon_default, { checked, indeterminate, disabled }), __internalRootRef }));
});
var internal_default = InternalCheckbox;

export {
  internal_default
};
//# sourceMappingURL=chunk-UU5H6V7V.js.map

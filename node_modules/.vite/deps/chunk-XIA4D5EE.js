import {
  InternalExpandableSection
} from "./chunk-U4RM7WIE.js";
import {
  InternalBox
} from "./chunk-7DUUH5PQ.js";
import {
  checkSafeUrl
} from "./chunk-VBS6KN2M.js";
import {
  fireCancelableEvent,
  fireNonCancelableEvent,
  isPlainLeftClick
} from "./chunk-T3BYYNEM.js";
import {
  isDevelopment
} from "./chunk-TIE5RIC4.js";
import {
  internal_default
} from "./chunk-NUCDU4ZC.js";
import {
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  useBaseComponent,
  useVisualRefresh,
  warnOnce
} from "./chunk-CHBULPAM.js";
import {
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/@cloudscape-design/components/side-navigation/index.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/side-navigation/internal.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/side-navigation/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/side-navigation/styles.scoped.css";
var styles_css_default = {
  "root": "awsui_root_l0dv0_s3klw_99",
  "header": "awsui_header_l0dv0_s3klw_136",
  "header-link": "awsui_header-link_l0dv0_s3klw_149",
  "header-link--has-logo": "awsui_header-link--has-logo_l0dv0_s3klw_159",
  "header-link-text": "awsui_header-link-text_l0dv0_s3klw_159",
  "header-logo": "awsui_header-logo_l0dv0_s3klw_164",
  "header-logo--stretched": "awsui_header-logo--stretched_l0dv0_s3klw_170",
  "list-container": "awsui_list-container_l0dv0_s3klw_175",
  "list": "awsui_list_l0dv0_s3klw_175",
  "list-variant-root": "awsui_list-variant-root_l0dv0_s3klw_187",
  "list-variant-root--last": "awsui_list-variant-root--last_l0dv0_s3klw_194",
  "list-variant-expandable-link-group": "awsui_list-variant-expandable-link-group_l0dv0_s3klw_198",
  "list-item": "awsui_list-item_l0dv0_s3klw_202",
  "section": "awsui_section_l0dv0_s3klw_210",
  "expandable-link-group": "awsui_expandable-link-group_l0dv0_s3klw_211",
  "section--no-ident": "awsui_section--no-ident_l0dv0_s3klw_214",
  "expandable-link-group--no-ident": "awsui_expandable-link-group--no-ident_l0dv0_s3klw_215",
  "refresh": "awsui_refresh_l0dv0_s3klw_223",
  "list-variant-section-group": "awsui_list-variant-section-group_l0dv0_s3klw_231",
  "section-group": "awsui_section-group_l0dv0_s3klw_238",
  "section-group-title": "awsui_section-group-title_l0dv0_s3klw_249",
  "link": "awsui_link_l0dv0_s3klw_253",
  "link-active": "awsui_link-active_l0dv0_s3klw_262",
  "info": "awsui_info_l0dv0_s3klw_299",
  "external-icon": "awsui_external-icon_l0dv0_s3klw_303",
  "divider": "awsui_divider_l0dv0_s3klw_307",
  "divider-default": "awsui_divider-default_l0dv0_s3klw_313",
  "divider-header": "awsui_divider-header_l0dv0_s3klw_318"
};

// node_modules/@cloudscape-design/components/side-navigation/util.js
function hasActiveLink(items, activeHref) {
  for (const item of items) {
    if ((item.type === "link" || item.type === "link-group" || item.type === "expandable-link-group") && item.href === activeHref) {
      return true;
    }
    if ((item.type === "section" || item.type === "link-group" || item.type === "expandable-link-group") && hasActiveLink(item.items, activeHref)) {
      return true;
    }
  }
  return false;
}
function generateExpandableItemsMapping(items, mapping = /* @__PURE__ */ new WeakMap(), expandableParents = []) {
  items.forEach((item) => {
    const nextLevelParents = expandableParents.slice();
    if (item.type === "section" || item.type === "expandable-link-group") {
      mapping.set(item, expandableParents);
      nextLevelParents.unshift(item);
    }
    if (item.type === "section" || item.type === "link-group" || item.type === "expandable-link-group") {
      generateExpandableItemsMapping(item.items, mapping, nextLevelParents);
    }
  });
  return mapping;
}
function checkDuplicateHrefs(items) {
  const hrefs = /* @__PURE__ */ new Set();
  const queue = items.slice();
  while (queue.length > 0) {
    const item = queue.shift();
    if ("href" in item) {
      if (hrefs.has(item.href)) {
        warnOnce("SideNavigation", `duplicate href in "${item.text}": ${item.href}`);
      }
      hrefs.add(item.href);
    }
    if ("items" in item) {
      queue.push(...item.items);
    }
  }
}

// node_modules/@cloudscape-design/components/side-navigation/internal.js
function Header({ definition, activeHref, fireFollow }) {
  checkSafeUrl("SideNavigation", definition.href);
  const onClick = (0, import_react.useCallback)((event) => {
    if (isPlainLeftClick(event)) {
      fireFollow(definition, event);
    }
  }, [fireFollow, definition]);
  return import_react.default.createElement(
    import_react.default.Fragment,
    null,
    import_react.default.createElement(
      "h2",
      { className: styles_css_default.header },
      import_react.default.createElement(
        "a",
        { href: definition.href, className: clsx_m_default(styles_css_default["header-link"], { [styles_css_default["header-link--has-logo"]]: !!definition.logo }), "aria-current": definition.href === activeHref ? "page" : void 0, onClick },
        definition.logo && import_react.default.createElement("img", Object.assign({ className: clsx_m_default(styles_css_default["header-logo"], {
          [styles_css_default["header-logo--stretched"]]: !definition.text
        }) }, definition.logo)),
        import_react.default.createElement("span", { className: styles_css_default["header-link-text"] }, definition.text)
      )
    ),
    import_react.default.createElement(Divider, { isPresentational: true, variant: "header" })
  );
}
function NavigationItemsList({ items, variant, activeHref, fireChange, fireFollow }) {
  const lists = [];
  let currentListIndex = 0;
  lists[currentListIndex] = {
    listVariant: variant,
    items: []
  };
  items.forEach((item, index) => {
    var _a, _b, _c, _d, _e;
    const itemid = index + 1;
    switch (item.type) {
      case "divider": {
        const dividerIndex = lists.length;
        lists[dividerIndex] = {
          element: import_react.default.createElement(
            "div",
            { "data-itemid": `item-${itemid}` },
            import_react.default.createElement(Divider, { variant: "default" })
          )
        };
        currentListIndex = lists.length;
        lists[currentListIndex] = {
          listVariant: variant,
          items: []
        };
        return;
      }
      case "link": {
        (_a = lists[currentListIndex].items) === null || _a === void 0 ? void 0 : _a.push({
          element: import_react.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default["list-item"] },
            import_react.default.createElement(Link, { definition: item, activeHref, fireChange, fireFollow })
          )
        });
        return;
      }
      case "section": {
        (_b = lists[currentListIndex].items) === null || _b === void 0 ? void 0 : _b.push({
          element: import_react.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default["list-item"] },
            import_react.default.createElement(Section, { definition: item, activeHref, variant, fireChange, fireFollow })
          )
        });
        return;
      }
      case "section-group": {
        (_c = lists[currentListIndex].items) === null || _c === void 0 ? void 0 : _c.push({
          element: import_react.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default["list-item"] },
            import_react.default.createElement(SectionGroup, { definition: item, activeHref, fireChange, fireFollow })
          )
        });
        return;
      }
      case "link-group": {
        (_d = lists[currentListIndex].items) === null || _d === void 0 ? void 0 : _d.push({
          element: import_react.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default["list-item"] },
            import_react.default.createElement(LinkGroup, { definition: item, activeHref, fireChange, fireFollow })
          )
        });
        return;
      }
      case "expandable-link-group": {
        (_e = lists[currentListIndex].items) === null || _e === void 0 ? void 0 : _e.push({
          element: import_react.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default["list-item"] },
            import_react.default.createElement(ExpandableLinkGroup, { definition: item, activeHref, fireChange, fireFollow, variant })
          )
        });
        return;
      }
    }
  });
  const lastListIndex = lists.length - 1;
  return import_react.default.createElement(import_react.default.Fragment, null, lists.map((list, index) => {
    if (!list.items || list.items.length === 0) {
      return import_react.default.createElement("div", { key: `hr-${index}`, className: clsx_m_default(styles_css_default.list, styles_css_default[`list-variant-${variant}`], {
        [styles_css_default["list-variant-root--last"]]: list.listVariant === "root" && index === lastListIndex
      }) }, list.element);
    } else {
      return import_react.default.createElement("ul", { key: `list-${index}`, className: clsx_m_default(styles_css_default.list, styles_css_default[`list-variant-${list.listVariant}`], {
        [styles_css_default["list-variant-root--last"]]: list.listVariant === "root" && index === lastListIndex
      }) }, list.items.map((item) => item.element));
    }
  }));
}
function Divider({ variant = "default", isPresentational = false }) {
  return import_react.default.createElement("hr", { className: clsx_m_default(styles_css_default.divider, styles_css_default[`divider-${variant}`]), role: isPresentational ? "presentation" : void 0 });
}
function Link({ definition, expanded, activeHref, fireFollow }) {
  checkSafeUrl("SideNavigation", definition.href);
  const isActive = definition.href === activeHref;
  const onClick = (0, import_react.useCallback)((event) => {
    if (isPlainLeftClick(event)) {
      fireFollow(definition, event);
    }
  }, [fireFollow, definition]);
  return import_react.default.createElement(
    import_react.default.Fragment,
    null,
    import_react.default.createElement(
      "a",
      { href: definition.href, className: clsx_m_default(styles_css_default.link, { [styles_css_default["link-active"]]: isActive }), target: definition.external ? "_blank" : void 0, rel: definition.external ? "noopener noreferrer" : void 0, "aria-expanded": expanded, "aria-current": definition.href === activeHref ? "page" : void 0, onClick },
      definition.text,
      definition.external && import_react.default.createElement(
        "span",
        { "aria-label": definition.externalIconAriaLabel, role: definition.externalIconAriaLabel ? "img" : void 0 },
        import_react.default.createElement(internal_default, { name: "external", className: styles_css_default["external-icon"] })
      )
    ),
    definition.info && import_react.default.createElement("span", { className: styles_css_default.info }, definition.info)
  );
}
function Section({ definition, activeHref, fireFollow, fireChange, variant }) {
  var _a;
  const [expanded, setExpanded] = (0, import_react.useState)((_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : true);
  const isVisualRefresh = useVisualRefresh();
  const onExpandedChange = (0, import_react.useCallback)((e) => {
    fireChange(definition, e.detail.expanded);
    setExpanded(e.detail.expanded);
  }, [definition, fireChange]);
  (0, import_react.useEffect)(() => {
    var _a2;
    setExpanded((_a2 = definition.defaultExpanded) !== null && _a2 !== void 0 ? _a2 : true);
  }, [definition]);
  return import_react.default.createElement(
    InternalExpandableSection,
    { variant: "footer", expanded, onChange: onExpandedChange, className: clsx_m_default(styles_css_default.section, variant === "section-group" && styles_css_default["section--no-ident"], isVisualRefresh && styles_css_default.refresh), headerText: definition.text },
    import_react.default.createElement(NavigationItemsList, { variant: "section", items: definition.items, fireFollow, fireChange, activeHref })
  );
}
function SectionGroup({ definition, activeHref, fireFollow, fireChange }) {
  return import_react.default.createElement(
    "div",
    { className: styles_css_default["section-group"] },
    import_react.default.createElement(InternalBox, { className: styles_css_default["section-group-title"], variant: "h3" }, definition.title),
    import_react.default.createElement(NavigationItemsList, { variant: "section-group", items: definition.items, fireFollow, fireChange, activeHref })
  );
}
function LinkGroup({ definition, activeHref, fireFollow, fireChange }) {
  checkSafeUrl("SideNavigation", definition.href);
  return import_react.default.createElement(
    import_react.default.Fragment,
    null,
    import_react.default.createElement(Link, { definition: { type: "link", href: definition.href, text: definition.text, info: definition.info }, fireFollow: (_, event) => fireFollow(definition, event), fireChange, activeHref }),
    import_react.default.createElement(NavigationItemsList, { variant: "link-group", items: definition.items, fireFollow, fireChange, activeHref })
  );
}
function ExpandableLinkGroup({ definition, fireFollow, fireChange, activeHref, variant }) {
  const containsActiveLink = (0, import_react.useMemo)(() => {
    return activeHref ? hasActiveLink(definition.items, activeHref) : false;
  }, [activeHref, definition.items]);
  const [expanded, setExpanded] = (0, import_react.useState)(() => {
    var _a;
    return (_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : definition.href === activeHref || containsActiveLink;
  });
  const [userExpanded, setUserExpanded] = (0, import_react.useState)();
  (0, import_react.useEffect)(() => setUserExpanded(void 0), [definition]);
  (0, import_react.useEffect)(() => {
    setExpanded(definition.href === activeHref || containsActiveLink);
  }, [definition.href, containsActiveLink, activeHref]);
  (0, import_react.useEffect)(() => {
    if (definition.defaultExpanded !== void 0) {
      setExpanded(definition.defaultExpanded);
    }
  }, [definition]);
  const onExpandedChange = (0, import_react.useCallback)((e) => {
    fireChange(definition, e.detail.expanded);
    setUserExpanded(e.detail.expanded);
  }, [definition, fireChange]);
  const onHeaderFollow = (_, event) => {
    fireFollow(definition, event);
    setUserExpanded(true);
    if (!expanded) {
      fireChange(definition, true);
    }
  };
  return import_react.default.createElement(
    InternalExpandableSection,
    { className: clsx_m_default(styles_css_default["expandable-link-group"], variant === "section-group" && styles_css_default["expandable-link-group--no-ident"]), variant: "navigation", expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded, onChange: onExpandedChange, headerText: import_react.default.createElement(Link, { definition: { type: "link", href: definition.href, text: definition.text }, expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded, fireFollow: onHeaderFollow, fireChange, activeHref }) },
    import_react.default.createElement(NavigationItemsList, { variant: "expandable-link-group", items: definition.items, fireFollow, fireChange, activeHref })
  );
}

// node_modules/@cloudscape-design/components/side-navigation/index.js
function SideNavigation(_a) {
  var { header, activeHref, items = [], onFollow, onChange } = _a, props = __rest(_a, ["header", "activeHref", "items", "onFollow", "onChange"]);
  const { __internalRootRef } = useBaseComponent("SideNavigation");
  const baseProps = getBaseProps(props);
  const parentMap = (0, import_react2.useMemo)(() => generateExpandableItemsMapping(items), [items]);
  if (isDevelopment) {
    (0, import_react2.useEffect)(() => checkDuplicateHrefs(items), [items]);
  }
  const onChangeHandler = (0, import_react2.useCallback)((item, expanded) => {
    fireNonCancelableEvent(onChange, { item, expanded, expandableParents: parentMap.get(item) });
  }, [onChange, parentMap]);
  const onFollowHandler = (0, import_react2.useCallback)((item, sourceEvent) => {
    fireCancelableEvent(onFollow, item, sourceEvent);
  }, [onFollow]);
  return import_react2.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, baseProps.className), ref: __internalRootRef }),
    header && import_react2.default.createElement(Header, { definition: header, activeHref, fireChange: onChangeHandler, fireFollow: onFollowHandler }),
    items && import_react2.default.createElement(
      "div",
      { className: styles_css_default["list-container"] },
      import_react2.default.createElement(NavigationItemsList, { variant: "root", items, fireFollow: onFollowHandler, fireChange: onChangeHandler, activeHref })
    )
  );
}
applyDisplayName(SideNavigation, "SideNavigation");

export {
  SideNavigation
};
//# sourceMappingURL=chunk-XIA4D5EE.js.map

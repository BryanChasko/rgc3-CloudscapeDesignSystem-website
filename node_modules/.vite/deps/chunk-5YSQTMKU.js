import {
  internal_default as internal_default2
} from "./chunk-6UFT4YRR.js";
import {
  PopoverBody,
  PopoverContainer,
  styles_css_default
} from "./chunk-7XRAASIL.js";
import {
  Transition
} from "./chunk-SJ7LIZY2.js";
import {
  Portal
} from "./chunk-TT4W3QW4.js";
import {
  useMobile
} from "./chunk-4K34KLGB.js";
import {
  useInternalI18n
} from "./chunk-VCW6C342.js";
import {
  InternalButton
} from "./chunk-DPGYCRGF.js";
import {
  checkSafeUrl
} from "./chunk-VBS6KN2M.js";
import {
  fireCancelableEvent,
  isPlainLeftClick
} from "./chunk-T3BYYNEM.js";
import {
  DATA_ATTR_FUNNEL_KEY,
  FUNNEL_KEY_FUNNEL_NAME
} from "./chunk-37SB7DJX.js";
import {
  internal_default
} from "./chunk-NUCDU4ZC.js";
import {
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  useBaseComponent
} from "./chunk-CHBULPAM.js";
import {
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/@cloudscape-design/components/breadcrumb-group/index.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/breadcrumb-group/internal.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/breadcrumb-group/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/breadcrumb-group/styles.scoped.css";
var styles_css_default2 = {
  "breadcrumb-group": "awsui_breadcrumb-group_d19fg_z6pwg_99",
  "item": "awsui_item_d19fg_z6pwg_137",
  "breadcrumb-group-list": "awsui_breadcrumb-group-list_d19fg_z6pwg_172",
  "ellipsis": "awsui_ellipsis_d19fg_z6pwg_184",
  "icon": "awsui_icon_d19fg_z6pwg_194",
  "mobile": "awsui_mobile_d19fg_z6pwg_199",
  "mobile-short": "awsui_mobile-short_d19fg_z6pwg_212"
};

// node_modules/@cloudscape-design/components/breadcrumb-group/item/item.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/breadcrumb-group/item/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/breadcrumb-group/item/styles.scoped.css";
var styles_css_default3 = {
  "link": "awsui_link_1kosq_b8bvi_99",
  "breadcrumb": "awsui_breadcrumb_1kosq_b8bvi_103",
  "icon": "awsui_icon_1kosq_b8bvi_106",
  "anchor": "awsui_anchor_1kosq_b8bvi_111",
  "last": "awsui_last_1kosq_b8bvi_157",
  "compressed": "awsui_compressed_1kosq_b8bvi_167",
  "text": "awsui_text_1kosq_b8bvi_171",
  "virtual-item": "awsui_virtual-item_1kosq_b8bvi_178",
  "item-popover": "awsui_item-popover_1kosq_b8bvi_185"
};

// node_modules/@cloudscape-design/components/breadcrumb-group/item/item.js
var BreadcrumbItemWithPopover = (_a) => {
  var { item, isLast, anchorAttributes, funnelAttributes } = _a, itemAttributes = __rest(_a, ["item", "isLast", "anchorAttributes", "funnelAttributes"]);
  const [showPopover, setShowPopover] = (0, import_react.useState)(false);
  const textRef = (0, import_react.useRef)(null);
  const virtualTextRef = (0, import_react.useRef)(null);
  const isTruncated = (textRef2, virtualTextRef2) => {
    if (!textRef2 || !virtualTextRef2 || !textRef2.current || !virtualTextRef2.current) {
      return false;
    }
    const virtualTextWidth = virtualTextRef2.current.getBoundingClientRect().width;
    const textWidth = textRef2.current.getBoundingClientRect().width;
    if (virtualTextWidth > textWidth) {
      return true;
    }
    return false;
  };
  const popoverContent = import_react.default.createElement(
    Portal,
    null,
    import_react.default.createElement(
      "div",
      { className: styles_css_default3["item-popover"] },
      import_react.default.createElement(Transition, { in: true }, () => import_react.default.createElement(
        PopoverContainer,
        { trackRef: textRef, size: "small", fixedWidth: false, position: "bottom", arrow: (position) => import_react.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default.arrow, styles_css_default[`arrow-position-${position}`]) },
          import_react.default.createElement("div", { className: styles_css_default["arrow-outer"] }),
          import_react.default.createElement("div", { className: styles_css_default["arrow-inner"] })
        ) },
        import_react.default.createElement(PopoverBody, { dismissButton: false, dismissAriaLabel: void 0, onDismiss: () => {
        }, header: void 0 }, item.text)
      ))
    )
  );
  (0, import_react.useEffect)(() => {
    const onKeyDown = (event) => {
      if (event.key === "Escape") {
        setShowPopover(false);
      }
    };
    if (showPopover) {
      document.addEventListener("keydown", onKeyDown);
    }
    return () => {
      document.removeEventListener("keydown", onKeyDown);
    };
  }, [showPopover]);
  return import_react.default.createElement(
    import_react.default.Fragment,
    null,
    import_react.default.createElement(
      Item,
      Object.assign({ isLast }, itemAttributes, { onFocus: () => {
        isTruncated(textRef, virtualTextRef) && setShowPopover(true);
      }, onBlur: () => setShowPopover(false), onMouseEnter: () => {
        isTruncated(textRef, virtualTextRef) && setShowPopover(true);
      }, onMouseLeave: () => setShowPopover(false), anchorAttributes }),
      import_react.default.createElement("span", Object.assign({}, funnelAttributes, { className: styles_css_default3.text, ref: textRef }), item.text),
      import_react.default.createElement("span", { className: styles_css_default3["virtual-item"], ref: virtualTextRef }, item.text)
    ),
    showPopover && popoverContent
  );
};
var Item = (_a) => {
  var { anchorAttributes, children, isLast } = _a, itemAttributes = __rest(_a, ["anchorAttributes", "children", "isLast"]);
  return isLast ? import_react.default.createElement("span", Object.assign({}, itemAttributes), children) : import_react.default.createElement("a", Object.assign({}, itemAttributes, anchorAttributes), children);
};
function BreadcrumbItem({ item, onClick, onFollow, isDisplayed, isLast = false, isCompressed = false }) {
  const preventDefault = (event) => event.preventDefault();
  const onClickHandler = (event) => {
    if (isPlainLeftClick(event)) {
      fireCancelableEvent(onFollow, getEventDetail(item), event);
    }
    fireCancelableEvent(onClick, getEventDetail(item), event);
  };
  const itemAttributes = {
    className: clsx_m_default(styles_css_default3.anchor, { [styles_css_default3.compressed]: isCompressed })
  };
  const anchorAttributes = {
    href: item.href || "#",
    onClick: isLast ? preventDefault : onClickHandler
  };
  const funnelAttributes = {};
  if (isLast) {
    funnelAttributes[DATA_ATTR_FUNNEL_KEY] = FUNNEL_KEY_FUNNEL_NAME;
  }
  return import_react.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default3.breadcrumb, isLast && styles_css_default3.last) },
    isDisplayed && isCompressed ? import_react.default.createElement(BreadcrumbItemWithPopover, Object.assign({ item, isLast, anchorAttributes, funnelAttributes }, itemAttributes)) : import_react.default.createElement(
      Item,
      Object.assign({ isLast, anchorAttributes }, itemAttributes),
      import_react.default.createElement("span", Object.assign({}, funnelAttributes, { className: styles_css_default3.text }), item.text)
    ),
    !isLast ? import_react.default.createElement(
      "span",
      { className: styles_css_default3.icon },
      import_react.default.createElement(internal_default, { name: "angle-right" })
    ) : null
  );
}

// node_modules/@cloudscape-design/components/breadcrumb-group/internal.js
var DEFAULT_EXPAND_ARIA_LABEL = "Show path";
var getDropdownTrigger = ({ ariaLabel, triggerRef, disabled, testUtilsClass, isOpen, onClick }) => {
  return import_react2.default.createElement(InternalButton, { ref: triggerRef, className: testUtilsClass, disabled, onClick: (event) => {
    event.preventDefault();
    onClick();
  }, ariaExpanded: isOpen, "aria-haspopup": true, ariaLabel, variant: "breadcrumb-group", formAction: "none" }, "...");
};
var EllipsisDropdown = ({ ariaLabel, dropdownItems, onDropdownItemClick, onDropdownItemFollow }) => {
  var _a;
  const i18n = useInternalI18n("breadcrumb-group");
  return import_react2.default.createElement(
    "li",
    { className: styles_css_default2.ellipsis },
    import_react2.default.createElement(internal_default2, { ariaLabel: (_a = i18n("expandAriaLabel", ariaLabel)) !== null && _a !== void 0 ? _a : DEFAULT_EXPAND_ARIA_LABEL, items: dropdownItems, onItemClick: onDropdownItemClick, onItemFollow: onDropdownItemFollow, customTriggerBuilder: getDropdownTrigger }),
    import_react2.default.createElement(
      "span",
      { className: styles_css_default2.icon },
      import_react2.default.createElement(internal_default, { name: "angle-right" })
    )
  );
};
var getEventDetail = (item) => ({
  item,
  text: item.text,
  href: item.href
});
function InternalBreadcrumbGroup(_a) {
  var { items = [], ariaLabel, expandAriaLabel, onClick, onFollow, __internalRootRef } = _a, props = __rest(_a, ["items", "ariaLabel", "expandAriaLabel", "onClick", "onFollow", "__internalRootRef"]);
  for (const item of items) {
    checkSafeUrl("BreadcrumbGroup", item.href);
  }
  const baseProps = getBaseProps(props);
  const isMobile = useMobile();
  let breadcrumbItems = items.map((item, index) => {
    const isLast = index === items.length - 1;
    return import_react2.default.createElement(
      "li",
      { className: styles_css_default2.item, key: index },
      import_react2.default.createElement(BreadcrumbItem, { item, onClick, onFollow, isCompressed: isMobile, isLast, isDisplayed: !isMobile || isLast || index === 0 })
    );
  });
  const getEventItem = (e) => {
    const { id } = e.detail;
    return items[parseInt(id)];
  };
  if (breadcrumbItems.length >= 2) {
    const dropdownItems = items.slice(1, items.length - 1).map((item, index) => ({
      id: (index + 1).toString(),
      text: item.text,
      href: item.href || "#"
    }));
    breadcrumbItems = [
      breadcrumbItems[0],
      import_react2.default.createElement(EllipsisDropdown, { key: "ellipsis", ariaLabel: expandAriaLabel, dropdownItems, onDropdownItemClick: (e) => fireCancelableEvent(onClick, getEventDetail(getEventItem(e)), e), onDropdownItemFollow: (e) => fireCancelableEvent(onFollow, getEventDetail(getEventItem(e)), e) }),
      ...breadcrumbItems.slice(1)
    ];
  }
  return import_react2.default.createElement(
    "nav",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default2["breadcrumb-group"], isMobile && styles_css_default2.mobile, items.length <= 2 && styles_css_default2["mobile-short"], baseProps.className), "aria-label": ariaLabel || void 0, ref: __internalRootRef }),
    import_react2.default.createElement("ol", { className: styles_css_default2["breadcrumb-group-list"] }, breadcrumbItems)
  );
}

// node_modules/@cloudscape-design/components/breadcrumb-group/index.js
function BreadcrumbGroup(_a) {
  var { items = [] } = _a, props = __rest(_a, ["items"]);
  const baseComponentProps = useBaseComponent("BreadcrumbGroup");
  return import_react3.default.createElement(InternalBreadcrumbGroup, Object.assign({ items }, props, baseComponentProps));
}
applyDisplayName(BreadcrumbGroup, "BreadcrumbGroup");

export {
  InternalBreadcrumbGroup,
  BreadcrumbGroup
};
//# sourceMappingURL=chunk-5YSQTMKU.js.map

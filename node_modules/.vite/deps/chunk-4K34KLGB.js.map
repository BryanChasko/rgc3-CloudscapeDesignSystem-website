{
  "version": 3,
  "sources": ["../../src/internal/hooks/use-mobile/index.ts", "../../src/internal/utils/scrollable-containers.ts", "../../src/internal/generated/custom-css-properties/index.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createSingletonState } from '@cloudscape-design/component-toolkit/internal';\nimport { getMatchingBreakpoint, mobileBreakpoint } from '../../breakpoints';\n\nfunction getIsMobile() {\n  if (typeof window === 'undefined') {\n    // assume desktop in server-rendering\n    return false;\n  }\n\n  if (window.matchMedia) {\n    /**\n     * Some browsers include the scrollbar width in their media query calculations, but\n     * some browsers don't. Thus we can't use `window.innerWidth` or\n     * `document.documentElement.clientWidth` to get a very accurate result (since we\n     * wouldn't know which one of them to use).\n     * Instead, we use the media query here in JS too.\n     */\n    return window.matchMedia(`(max-width: ${mobileBreakpoint}px)`).matches;\n  }\n\n  return getMatchingBreakpoint(window.innerWidth, ['xs']) !== 'xs';\n}\n\nexport const useMobile = createSingletonState<boolean>({\n  initialState: () => getIsMobile(),\n  factory: handler => {\n    const listener = () => handler(getIsMobile());\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  },\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { findUpUntil } from './dom';\nexport interface BoundingBox {\n  height: number;\n  width: number;\n  top: number;\n  left: number;\n}\n\nexport const getOverflowParents = (element: HTMLElement): HTMLElement[] => {\n  const parents = [];\n  let node: HTMLElement | null = element;\n\n  while ((node = node.parentElement) && node !== document.body) {\n    getComputedStyle(node).overflow !== 'visible' && parents.push(node);\n  }\n  return parents;\n};\n\nexport const getOverflowParentDimensions = ({\n  element,\n  excludeClosestParent = false,\n  expandToViewport = false,\n  canExpandOutsideViewport = false,\n}: {\n  element: HTMLElement;\n  excludeClosestParent: boolean;\n  expandToViewport: boolean;\n  canExpandOutsideViewport: boolean;\n}): BoundingBox[] => {\n  const parents = expandToViewport\n    ? []\n    : getOverflowParents(element).map(el => {\n        const { height, width, top, left } = el.getBoundingClientRect();\n        return {\n          // Treat the whole scrollable area as the available height\n          // if we're allowed to expand past the viewport.\n          height: canExpandOutsideViewport ? el.scrollHeight : height,\n          width,\n          top,\n          left,\n        };\n      });\n\n  if (canExpandOutsideViewport && !expandToViewport) {\n    const documentDimensions = document.documentElement.getBoundingClientRect();\n    parents.push({\n      width: Math.max(documentDimensions.width, document.documentElement.clientWidth),\n      height: Math.max(documentDimensions.height, document.documentElement.clientHeight),\n      top: documentDimensions.top,\n      left: documentDimensions.left,\n    });\n  } else {\n    parents.push({\n      height: window.innerHeight,\n      width: window.innerWidth,\n      top: 0,\n      left: 0,\n    });\n  }\n\n  if (excludeClosestParent && !expandToViewport) {\n    parents.shift();\n  }\n\n  return parents;\n};\n\ntype ScrollIntoViewOptions = Parameters<HTMLElement['scrollIntoView']>[0];\n\n/**\n * Calls `scrollIntoView` on the provided element with sensible defaults. If\n * the element does not exist or does not support the `scrollIntoView`\n * method, it will do nothing. This wrapper is created to support environments\n * where the native function is not available like JSDom (feature request:\n * https://github.com/jsdom/jsdom/issues/1422).\n *\n * @param element to be scrolled into view\n * @param options native options for `scrollIntoView`\n */\nexport function scrollElementIntoView(\n  element: HTMLElement | undefined,\n  options: ScrollIntoViewOptions = { block: 'nearest', inline: 'nearest' }\n) {\n  element?.scrollIntoView?.(options);\n}\n\nexport function calculateScroll({ top, height }: BoundingBox) {\n  if (top < 0) {\n    return top;\n  } else if (top + height > window.innerHeight) {\n    if (height > window.innerHeight) {\n      return top;\n    } else {\n      return top + height - window.innerHeight;\n    }\n  }\n  return 0;\n}\n\n/**\n * For elements with fixed position, the browser's native scrollIntoView API doesn't work,\n * so we need to manually scroll to the element's position.\n * Supports only vertical scrolling.\n */\nexport function scrollRectangleIntoView(box: BoundingBox, scrollableParent?: HTMLElement) {\n  const scrollAmount = calculateScroll(box);\n  if (scrollAmount) {\n    (scrollableParent || window).scrollBy(0, scrollAmount);\n  }\n}\n\nexport function getFirstScrollableParent(element: HTMLElement): HTMLElement | undefined {\n  return (\n    findUpUntil(element, el => {\n      const overflows = el.scrollHeight > el.clientHeight;\n      return overflows && ['scroll', 'auto'].includes(getComputedStyle(el).overflowY);\n    }) || undefined\n  );\n}\n", "const customCSSPropertiesMap: Record<string, string> = {\n  breadcrumbsGap: '--awsui-breadcrumbs-gap-iof9y8',\n  contentGapLeft: '--awsui-content-gap-left-iof9y8',\n  contentGapRight: '--awsui-content-gap-right-iof9y8',\n  contentHeight: '--awsui-content-height-iof9y8',\n  containerFirstGap: '--awsui-container-first-gap-iof9y8',\n  containerFirstOverlapExtension: '--awsui-container-first-overlap-extension-iof9y8',\n  defaultMaxContentWidth: '--awsui-default-max-content-width-iof9y8',\n  defaultMinContentWidth: '--awsui-default-min-content-width-iof9y8',\n  drawerSize: '--awsui-drawer-size-iof9y8',\n  footerHeight: '--awsui-footer-height-iof9y8',\n  headerGap: '--awsui-header-gap-iof9y8',\n  headerHeight: '--awsui-header-height-iof9y8',\n  layoutWidth: '--awsui-layout-width-iof9y8',\n  mainGap: '--awsui-main-gap-iof9y8',\n  mainOffsetLeft: '--awsui-main-offset-left-iof9y8',\n  mainTemplateRows: '--awsui-main-template-rows-iof9y8',\n  maxContentWidth: '--awsui-max-content-width-iof9y8',\n  minContentWidth: '--awsui-min-content-width-iof9y8',\n  mobileBarHeight: '--awsui-mobile-bar-height-iof9y8',\n  notificationsGap: '--awsui-notifications-gap-iof9y8',\n  notificationsHeight: '--awsui-notifications-height-iof9y8',\n  offsetTop: '--awsui-offset-top-iof9y8',\n  offsetTopWithNotifications: '--awsui-offset-top-with-notifications-iof9y8',\n  overlapHeight: '--awsui-overlap-height-iof9y8',\n  navigationWidth: '--awsui-navigation-width-iof9y8',\n  splitPanelReportedHeaderSize: '--awsui-split-panel-reported-header-size-iof9y8',\n  splitPanelReportedSize: '--awsui-split-panel-reported-size-iof9y8',\n  splitPanelHeight: '--awsui-split-panel-height-iof9y8',\n  splitPanelMinWidth: '--awsui-split-panel-min-width-iof9y8',\n  splitPanelMaxWidth: '--awsui-split-panel-max-width-iof9y8',\n  toolsMaxWidth: '--awsui-tools-max-width-iof9y8',\n  toolsWidth: '--awsui-tools-width-iof9y8',\n  toolsAnimationStartingOpacity: '--awsui-tools-animation-starting-opacity-iof9y8',\n  contentScrollMargin: '--awsui-content-scroll-margin-iof9y8',\n  flashbarStackDepth: '--awsui-flashbar-stack-depth-iof9y8',\n  flashbarStackIndex: '--awsui-flashbar-stack-index-iof9y8',\n  flashbarStickyBottomMargin: '--awsui-flashbar-sticky-bottom-margin-iof9y8',\n  stackedNotificationsBottomMargin: '--awsui-stacked-notifications-bottom-margin-iof9y8',\n  stackedNotificationsDefaultBottomMargin: '--awsui-stacked-notifications-default-bottom-margin-iof9y8',\n  dropdownDefaultMaxWidth: '--awsui-dropdown-default-max-width-iof9y8',\n  spinnerRotatorFrom: '--awsui-spinner-rotator-from-iof9y8',\n  spinnerRotatorTo: '--awsui-spinner-rotator-to-iof9y8',\n  spinnerLineLeftFrom: '--awsui-spinner-line-left-from-iof9y8',\n  spinnerLineLeftTo: '--awsui-spinner-line-left-to-iof9y8',\n  spinnerLineRightFrom: '--awsui-spinner-line-right-from-iof9y8',\n  spinnerLineRightTo: '--awsui-spinner-line-right-to-iof9y8',\n};\nexport default customCSSPropertiesMap;\n"],
  "mappings": "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",
  "names": []
}

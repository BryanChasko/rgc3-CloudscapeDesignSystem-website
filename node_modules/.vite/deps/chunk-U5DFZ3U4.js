import {
  useRadioGroupForwardFocus
} from "./chunk-4Q3W4BXW.js";
import {
  radio_button_default
} from "./chunk-GMWSECVM.js";
import {
  useFormFieldContext
} from "./chunk-RGNJKKON.js";
import {
  useContainerBreakpoints
} from "./chunk-BESADZDS.js";
import {
  fireNonCancelableEvent
} from "./chunk-T3BYYNEM.js";
import {
  useUniqueId
} from "./chunk-3TE4OIE4.js";
import {
  useMergeRefs
} from "./chunk-NYW4WZSZ.js";
import {
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  useBaseComponent,
  useVisualRefresh
} from "./chunk-CHBULPAM.js";
import {
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/@cloudscape-design/components/tiles/index.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tiles/internal.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tiles/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/tiles/styles.scoped.css";
var styles_css_default = {
  "column-layout": "awsui_column-layout_vj6p7_147sx_99",
  "grid": "awsui_grid_vj6p7_147sx_134",
  "grid-no-gutters": "awsui_grid-no-gutters_vj6p7_147sx_140",
  "grid-variant-text-grid": "awsui_grid-variant-text-grid_vj6p7_147sx_144",
  "grid-breakpoint-default": "awsui_grid-breakpoint-default_vj6p7_147sx_152",
  "grid-columns-1": "awsui_grid-columns-1_vj6p7_147sx_155",
  "grid-breakpoint-xxs": "awsui_grid-breakpoint-xxs_vj6p7_147sx_155",
  "grid-breakpoint-xs": "awsui_grid-breakpoint-xs_vj6p7_147sx_158",
  "grid-columns-2": "awsui_grid-columns-2_vj6p7_147sx_161",
  "grid-columns-3": "awsui_grid-columns-3_vj6p7_147sx_167",
  "grid-columns-4": "awsui_grid-columns-4_vj6p7_147sx_173",
  "grid-vertical-borders": "awsui_grid-vertical-borders_vj6p7_147sx_189",
  "grid-horizontal-borders": "awsui_grid-horizontal-borders_vj6p7_147sx_222",
  "root": "awsui_root_vj6p7_147sx_276",
  "tile-container": "awsui_tile-container_vj6p7_147sx_314",
  "refresh": "awsui_refresh_vj6p7_147sx_329",
  "has-metadata": "awsui_has-metadata_vj6p7_147sx_333",
  "selected": "awsui_selected_vj6p7_147sx_339",
  "disabled": "awsui_disabled_vj6p7_147sx_344",
  "columns": "awsui_columns_vj6p7_147sx_360",
  "column-1": "awsui_column-1_vj6p7_147sx_366",
  "breakpoint-xs": "awsui_breakpoint-xs_vj6p7_147sx_374",
  "breakpoint-xxs": "awsui_breakpoint-xxs_vj6p7_147sx_379",
  "column-2": "awsui_column-2_vj6p7_147sx_384",
  "column-3": "awsui_column-3_vj6p7_147sx_402",
  "column-4": "awsui_column-4_vj6p7_147sx_420",
  "control": "awsui_control_vj6p7_147sx_439",
  "no-image": "awsui_no-image_vj6p7_147sx_443",
  "image": "awsui_image_vj6p7_147sx_447"
};

// node_modules/@cloudscape-design/components/tiles/tile.js
var import_react = __toESM(require_react());
var Tile = import_react.default.forwardRef(({ item, selected, name, breakpoint, onChange }, forwardedRef) => {
  const internalRef = (0, import_react.useRef)(null);
  const isVisualRefresh = useVisualRefresh();
  const mergedRef = useMergeRefs(internalRef, forwardedRef);
  return import_react.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default["tile-container"], { [styles_css_default["has-metadata"]]: item.description || item.image }, { [styles_css_default.selected]: selected }, { [styles_css_default.disabled]: !!item.disabled }, { [styles_css_default.refresh]: isVisualRefresh }, styles_css_default[`breakpoint-${breakpoint}`]), "data-value": item.value, onClick: () => {
      var _a;
      if (item.disabled) {
        return;
      }
      (_a = internalRef.current) === null || _a === void 0 ? void 0 : _a.focus();
      if (!selected) {
        fireNonCancelableEvent(onChange, { value: item.value });
      }
    } },
    import_react.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default.control, { [styles_css_default["no-image"]]: !item.image }) },
      import_react.default.createElement(radio_button_default, { checked: selected, ref: mergedRef, name, value: item.value, label: item.label, description: item.description, disabled: item.disabled, controlId: item.controlId })
    ),
    item.image && import_react.default.createElement("div", { className: clsx_m_default(styles_css_default.image, { [styles_css_default.disabled]: !!item.disabled }) }, item.image)
  );
});

// node_modules/@cloudscape-design/components/tiles/internal.js
var COLUMN_TRIGGERS = ["default", "xxs", "xs"];
var InternalTiles = import_react2.default.forwardRef((_a, ref) => {
  var { name, value, items, ariaLabel, ariaRequired, ariaControls, columns, onChange, __internalRootRef = null } = _a, rest = __rest(_a, ["name", "value", "items", "ariaLabel", "ariaRequired", "ariaControls", "columns", "onChange", "__internalRootRef"]);
  const baseProps = getBaseProps(rest);
  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);
  const generatedName = useUniqueId("awsui-tiles-");
  const [tileRef, tileRefIndex] = useRadioGroupForwardFocus(ref, items, value);
  const [breakpoint, breakpointRef] = useContainerBreakpoints(COLUMN_TRIGGERS);
  const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);
  const columnCount = getColumnCount(items, columns);
  return import_react2.default.createElement(
    "div",
    Object.assign({ role: "radiogroup", "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby, "aria-required": ariaRequired, "aria-controls": ariaControls }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default.root), ref: mergedRef }),
    import_react2.default.createElement("div", { className: clsx_m_default(styles_css_default.columns, styles_css_default[`column-${columnCount}`]) }, items && items.map((item, index) => import_react2.default.createElement(Tile, { ref: index === tileRefIndex ? tileRef : void 0, key: item.value, item, selected: item.value === value, name: name || generatedName, breakpoint, onChange })))
  );
});
function getColumnCount(items, columns) {
  if (columns) {
    return columns;
  }
  const nItems = items ? items.length : 0;
  const columnsLookup = {
    0: 1,
    1: 1,
    2: 2,
    4: 2,
    8: 2
  };
  return columnsLookup[nItems] || 3;
}
var internal_default = InternalTiles;

// node_modules/@cloudscape-design/components/tiles/index.js
var Tiles = import_react3.default.forwardRef((props, ref) => {
  const baseComponentProps = useBaseComponent("Tiles", {
    props: { columns: props.columns }
  });
  return import_react3.default.createElement(internal_default, Object.assign({ ref }, props, baseComponentProps));
});
applyDisplayName(Tiles, "Tiles");
var tiles_default = Tiles;

export {
  internal_default,
  tiles_default
};
//# sourceMappingURL=chunk-U5DFZ3U4.js.map

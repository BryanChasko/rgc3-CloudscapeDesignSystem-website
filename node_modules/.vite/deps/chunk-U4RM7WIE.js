import {
  Description,
  InternalHeader
} from "./chunk-QM645ISK.js";
import {
  InternalContainerAsSubstep
} from "./chunk-Z4NCSJKF.js";
import {
  AnalyticsFunnelSubStep
} from "./chunk-6LZAGYP5.js";
import {
  useControllable
} from "./chunk-UDNZX2WJ.js";
import {
  CSSTransition_default
} from "./chunk-HI46SMVR.js";
import {
  fireNonCancelableEvent
} from "./chunk-T3BYYNEM.js";
import {
  useUniqueId
} from "./chunk-3TE4OIE4.js";
import {
  isDevelopment
} from "./chunk-TIE5RIC4.js";
import {
  internal_default
} from "./chunk-NUCDU4ZC.js";
import {
  KeyCode,
  __rest,
  clsx_m_default,
  getBaseProps,
  warnOnce
} from "./chunk-CHBULPAM.js";
import {
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/@cloudscape-design/components/expandable-section/internal.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/expandable-section/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/expandable-section/styles.scoped.css";
var styles_css_default = {
  "content-enter": "awsui_content-enter_gwq0h_xoje_103",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_gwq0h_xoje_1",
  "trigger-expanded": "awsui_trigger-expanded_gwq0h_xoje_125",
  "icon": "awsui_icon_gwq0h_xoje_139",
  "root": "awsui_root_gwq0h_xoje_157",
  "expand-button": "awsui_expand-button_gwq0h_xoje_195",
  "expanded": "awsui_expanded_gwq0h_xoje_202",
  "icon-container": "awsui_icon-container_gwq0h_xoje_212",
  "icon-container-container": "awsui_icon-container-container_gwq0h_xoje_216",
  "wrapper": "awsui_wrapper_gwq0h_xoje_220",
  "wrapper-default": "awsui_wrapper-default_gwq0h_xoje_228",
  "wrapper-footer": "awsui_wrapper-footer_gwq0h_xoje_228",
  "wrapper-navigation": "awsui_wrapper-navigation_gwq0h_xoje_232",
  "wrapper-container": "awsui_wrapper-container_gwq0h_xoje_235",
  "wrapper-compact": "awsui_wrapper-compact_gwq0h_xoje_239",
  "header-deprecated": "awsui_header-deprecated_gwq0h_xoje_252",
  "wrapper-expanded": "awsui_wrapper-expanded_gwq0h_xoje_274",
  "header": "awsui_header_gwq0h_xoje_252",
  "header-wrapper": "awsui_header-wrapper_gwq0h_xoje_294",
  "header-actions-wrapper": "awsui_header-actions-wrapper_gwq0h_xoje_306",
  "header-button": "awsui_header-button_gwq0h_xoje_311",
  "header-container-button": "awsui_header-container-button_gwq0h_xoje_311",
  "header-container": "awsui_header-container_gwq0h_xoje_311",
  "header-navigation": "awsui_header-navigation_gwq0h_xoje_346",
  "header-text": "awsui_header-text_gwq0h_xoje_383",
  "content": "awsui_content_gwq0h_xoje_103",
  "content-default": "awsui_content-default_gwq0h_xoje_390",
  "content-footer": "awsui_content-footer_gwq0h_xoje_394",
  "content-expanded": "awsui_content-expanded_gwq0h_xoje_398",
  "content-compact": "awsui_content-compact_gwq0h_xoje_401",
  "focusable": "awsui_focusable_gwq0h_xoje_405",
  "click-target": "awsui_click-target_gwq0h_xoje_420"
};

// node_modules/@cloudscape-design/components/expandable-section/expandable-section-container.js
var import_react = __toESM(require_react());
var ExpandableSectionContainer = (_a) => {
  var { className, children, header, variant, expanded, disableContentPaddings, __internalRootRef } = _a, rest = __rest(_a, ["className", "children", "header", "variant", "expanded", "disableContentPaddings", "__internalRootRef"]);
  if (variant === "container" || variant === "stacked") {
    return import_react.default.createElement(
      AnalyticsFunnelSubStep,
      null,
      import_react.default.createElement(InternalContainerAsSubstep, Object.assign({}, rest, { className, header, variant: variant === "stacked" ? "stacked" : "default", disableContentPaddings: disableContentPaddings || !expanded, disableHeaderPaddings: true, __hiddenContent: !expanded, __internalRootRef }), children)
    );
  }
  return import_react.default.createElement(
    "div",
    Object.assign({ className }, rest, { ref: __internalRootRef }),
    header,
    children
  );
};

// node_modules/@cloudscape-design/components/expandable-section/expandable-section-header.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/expandable-section/utils.js
function variantSupportsDescription(variant) {
  return ["container", "default", "footer"].includes(variant);
}
function variantSupportsInteractiveElements(variant) {
  return ["container", "compact"].includes(variant);
}

// node_modules/@cloudscape-design/components/expandable-section/expandable-section-header.js
var componentName = "ExpandableSection";
var ExpandableDeprecatedHeader = ({ id, className, onClick, ariaLabel, ariaControls, expanded, children, icon, onKeyUp, onKeyDown, variant }) => {
  return import_react2.default.createElement(
    "div",
    { id, role: "button", className: clsx_m_default(className, styles_css_default["expand-button"], styles_css_default["click-target"], styles_css_default["header-deprecated"]), tabIndex: 0, onKeyUp, onKeyDown, onClick, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": expanded },
    import_react2.default.createElement("div", { className: clsx_m_default(styles_css_default["icon-container"], styles_css_default[`icon-container-${variant}`]) }, icon),
    children
  );
};
var ExpandableNavigationHeader = ({ id, className, onClick, ariaLabelledBy, ariaLabel, ariaControls, expanded, children, icon }) => {
  return import_react2.default.createElement(
    "div",
    { id, className: clsx_m_default(className, styles_css_default["click-target"]) },
    import_react2.default.createElement("button", { className: clsx_m_default(styles_css_default["icon-container"], styles_css_default["expand-button"]), "aria-labelledby": ariaLabelledBy, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": expanded, type: "button", onClick }, icon),
    children
  );
};
var ExpandableHeaderTextWrapper = ({ id, descriptionId, className, onClick, ariaLabel, ariaControls, expanded, children, icon, headerDescription, headerCounter, headerInfo, headerActions, variant, headingTagOverride, onKeyUp, onKeyDown }) => {
  const isContainer = variant === "container";
  const HeadingTag = headingTagOverride || "div";
  const supportsInteractiveElements = variantSupportsInteractiveElements(variant);
  const restrictClickableArea = supportsInteractiveElements && (headerInfo || headerActions);
  const actions = supportsInteractiveElements && headerActions;
  const description = variantSupportsDescription(variant) && headerDescription && import_react2.default.createElement("span", { id: descriptionId, className: styles_css_default[`description-${variant}`] }, headerDescription);
  const listeners = { onClick, onKeyDown, onKeyUp };
  const headerButtonListeners = restrictClickableArea ? listeners : void 0;
  const headingTagListeners = !headerButtonListeners && !isContainer && description ? listeners : void 0;
  const wrapperListeners = !headerButtonListeners && !headingTagListeners ? listeners : void 0;
  const headerButton = import_react2.default.createElement(
    "span",
    Object.assign({ className: clsx_m_default(styles_css_default["expand-button"], isContainer ? styles_css_default["header-container-button"] : styles_css_default["header-button"], headerButtonListeners && styles_css_default["click-target"]), role: "button", tabIndex: 0, "aria-label": ariaLabel, "aria-labelledby": !ariaLabel && description ? id : void 0, "aria-describedby": description ? descriptionId : void 0, "aria-controls": ariaControls, "aria-expanded": expanded }, headerButtonListeners),
    import_react2.default.createElement("span", { className: clsx_m_default(styles_css_default["icon-container"], styles_css_default[`icon-container-${variant}`]) }, icon),
    import_react2.default.createElement("span", { id, className: styles_css_default["header-text"] }, children)
  );
  return import_react2.default.createElement("div", Object.assign({ className: clsx_m_default(className, wrapperListeners && styles_css_default["click-target"]) }, wrapperListeners), isContainer ? import_react2.default.createElement(InternalHeader, { variant: "h2", description, counter: headerCounter, info: headerInfo, actions, headingTagOverride }, headerButton) : import_react2.default.createElement(
    import_react2.default.Fragment,
    null,
    import_react2.default.createElement(
      "div",
      { className: clsx_m_default(actions && styles_css_default["header-actions-wrapper"]) },
      import_react2.default.createElement(HeadingTag, Object.assign({ className: clsx_m_default(styles_css_default["header-wrapper"], headingTagListeners && styles_css_default["click-target"]) }, headingTagListeners), headerButton),
      actions
    ),
    description && import_react2.default.createElement(Description, { variantOverride: "h3" }, description)
  ));
};
var ExpandableSectionHeader = ({ id, descriptionId, className, variant, header, headerText, headerDescription, headerCounter, headerInfo, headerActions, headingTagOverride, expanded, ariaControls, ariaLabel, ariaLabelledBy, onKeyUp, onKeyDown, onClick }) => {
  const icon = import_react2.default.createElement(internal_default, { size: variant === "container" ? "medium" : "normal", className: clsx_m_default(styles_css_default.icon, expanded && styles_css_default.expanded), name: "caret-down-filled" });
  const defaultHeaderProps = {
    id,
    icon,
    expanded,
    ariaControls,
    ariaLabel,
    onClick,
    variant
  };
  if ((headerCounter || headerInfo || headerActions) && !variantSupportsInteractiveElements(variant) && isDevelopment) {
    warnOnce(componentName, 'The `headerCounter`, `headerInfo` and `headerActions` props are only supported for the "container" variant.');
  }
  if (headerDescription && !variantSupportsDescription(variant) && isDevelopment) {
    warnOnce(componentName, `The \`headerDescription\` prop is not supported for the ${variant} variant.`);
  }
  const wrapperClassName = clsx_m_default(styles_css_default.wrapper, styles_css_default[`wrapper-${variant}`], expanded && styles_css_default["wrapper-expanded"]);
  if (variant === "navigation") {
    return import_react2.default.createElement(ExpandableNavigationHeader, Object.assign({ className: clsx_m_default(className, wrapperClassName), ariaLabelledBy }, defaultHeaderProps), headerText !== null && headerText !== void 0 ? headerText : header);
  }
  if (headerText) {
    return import_react2.default.createElement(ExpandableHeaderTextWrapper, Object.assign({ className: clsx_m_default(className, wrapperClassName, expanded && styles_css_default.expanded), descriptionId, headerDescription, headerCounter, headerInfo, headerActions, headingTagOverride, onKeyUp, onKeyDown }, defaultHeaderProps), headerText);
  }
  if (variant === "container" && header && isDevelopment) {
    warnOnce(componentName, "Use `headerText` instead of `header` to provide the button within the heading for a11y.");
  }
  return import_react2.default.createElement(ExpandableDeprecatedHeader, Object.assign({ className: clsx_m_default(className, wrapperClassName, styles_css_default.focusable, expanded && styles_css_default.expanded), onKeyUp, onKeyDown }, defaultHeaderProps), header);
};

// node_modules/@cloudscape-design/components/expandable-section/internal.js
function InternalExpandableSection(_a) {
  var { expanded: controlledExpanded, defaultExpanded, onChange, variant = "default", children, header, headerText, headerCounter, headerDescription, headerInfo, headerActions, headingTagOverride, disableContentPaddings, headerAriaLabel, __internalRootRef } = _a, props = __rest(_a, ["expanded", "defaultExpanded", "onChange", "variant", "children", "header", "headerText", "headerCounter", "headerDescription", "headerInfo", "headerActions", "headingTagOverride", "disableContentPaddings", "headerAriaLabel", "__internalRootRef"]);
  const ref = (0, import_react3.useRef)(null);
  const controlId = useUniqueId();
  const triggerControlId = `${controlId}-trigger`;
  const descriptionId = `${controlId}-description`;
  const baseProps = getBaseProps(props);
  const [expanded, setExpanded] = useControllable(controlledExpanded, onChange, defaultExpanded, {
    componentName: "ExpandableSection",
    controlledProp: "expanded",
    changeHandler: "onChange"
  });
  const onExpandChange = (0, import_react3.useCallback)((expanded2) => {
    setExpanded(expanded2);
    fireNonCancelableEvent(onChange, { expanded: expanded2 });
  }, [onChange, setExpanded]);
  const onClick = (0, import_react3.useCallback)(() => {
    onExpandChange(!expanded);
  }, [onExpandChange, expanded]);
  const onKeyUp = (0, import_react3.useCallback)((event) => {
    const interactionKeys = [KeyCode.enter, KeyCode.space];
    if (interactionKeys.indexOf(event.keyCode) !== -1) {
      onExpandChange(!expanded);
    }
  }, [onExpandChange, expanded]);
  const onKeyDown = (0, import_react3.useCallback)((event) => {
    if (event.keyCode === KeyCode.space) {
      event.preventDefault();
    }
  }, []);
  const triggerProps = {
    ariaControls: controlId,
    ariaLabel: headerAriaLabel,
    ariaLabelledBy: headerAriaLabel ? void 0 : triggerControlId,
    onKeyUp,
    onKeyDown,
    onClick
  };
  const baseVariant = variant === "stacked" ? "container" : variant;
  return import_react3.default.createElement(
    ExpandableSectionContainer,
    Object.assign({}, baseProps, { expanded, className: clsx_m_default(baseProps.className, styles_css_default.root), variant, disableContentPaddings, header: import_react3.default.createElement(ExpandableSectionHeader, Object.assign({ id: triggerControlId, descriptionId, className: clsx_m_default(styles_css_default.header, styles_css_default[`header-${baseVariant}`]), variant: baseVariant, expanded: !!expanded, header, headerText, headerDescription, headerCounter, headerInfo, headerActions, headingTagOverride }, triggerProps)), __internalRootRef }),
    import_react3.default.createElement(
      CSSTransition_default,
      { in: expanded, timeout: 30, classNames: { enter: styles_css_default["content-enter"] }, nodeRef: ref },
      import_react3.default.createElement("div", { id: controlId, ref, className: clsx_m_default(styles_css_default.content, styles_css_default[`content-${baseVariant}`], expanded && styles_css_default["content-expanded"]), role: "group", "aria-label": triggerProps.ariaLabel, "aria-labelledby": triggerProps.ariaLabelledBy, "aria-describedby": variantSupportsDescription(baseVariant) && headerDescription ? descriptionId : void 0 }, children)
    )
  );
}

export {
  styles_css_default,
  InternalExpandableSection
};
//# sourceMappingURL=chunk-U4RM7WIE.js.map

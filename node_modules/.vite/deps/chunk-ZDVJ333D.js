import {
  convertAutoComplete
} from "./chunk-3WE6CZLV.js";
import {
  useFormFieldContext
} from "./chunk-RGNJKKON.js";
import {
  useForwardFocus
} from "./chunk-YTRJQH4M.js";
import {
  fireKeyboardEvent,
  fireNonCancelableEvent
} from "./chunk-T3BYYNEM.js";
import {
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  useBaseComponent
} from "./chunk-CHBULPAM.js";
import {
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/@cloudscape-design/components/textarea/index.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/textarea/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/textarea/styles.scoped.css";
var styles_css_default = {
  "root": "awsui_root_qk1j1_w6j53_99",
  "textarea": "awsui_textarea_qk1j1_w6j53_103",
  "textarea-readonly": "awsui_textarea-readonly_qk1j1_w6j53_156",
  "textarea-invalid": "awsui_textarea-invalid_qk1j1_w6j53_198"
};

// node_modules/@cloudscape-design/components/textarea/index.js
var Textarea = import_react.default.forwardRef((_a, ref) => {
  var { value, autoComplete = true, disabled, readOnly, disableBrowserAutocorrect, disableBrowserSpellcheck, spellcheck, onKeyDown, onKeyUp, onChange, onBlur, onFocus, ariaRequired, name, rows, placeholder, autoFocus, ariaLabel } = _a, rest = __rest(_a, ["value", "autoComplete", "disabled", "readOnly", "disableBrowserAutocorrect", "disableBrowserSpellcheck", "spellcheck", "onKeyDown", "onKeyUp", "onChange", "onBlur", "onFocus", "ariaRequired", "name", "rows", "placeholder", "autoFocus", "ariaLabel"]);
  const { __internalRootRef } = useBaseComponent("Textarea", {
    props: { autoComplete, autoFocus, disableBrowserAutocorrect, disableBrowserSpellcheck, readOnly, spellcheck }
  });
  const { ariaLabelledby, ariaDescribedby, controlId, invalid } = useFormFieldContext(rest);
  const baseProps = getBaseProps(rest);
  const textareaRef = (0, import_react.useRef)(null);
  useForwardFocus(ref, textareaRef);
  const attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    "aria-describedby": ariaDescribedby,
    "aria-required": ariaRequired ? "true" : void 0,
    "aria-invalid": invalid ? "true" : void 0,
    name,
    placeholder,
    autoFocus,
    className: clsx_m_default(styles_css_default.textarea, {
      [styles_css_default["textarea-readonly"]]: readOnly,
      [styles_css_default["textarea-invalid"]]: invalid
    }),
    autoComplete: convertAutoComplete(autoComplete),
    spellCheck: spellcheck,
    disabled,
    readOnly: readOnly ? true : void 0,
    rows: rows || 3,
    onKeyDown: onKeyDown && ((event) => fireKeyboardEvent(onKeyDown, event)),
    onKeyUp: onKeyUp && ((event) => fireKeyboardEvent(onKeyUp, event)),
    // We set a default value on the component in order to force it into the controlled mode.
    value: value || "",
    onChange: onChange && ((event) => fireNonCancelableEvent(onChange, { value: event.target.value })),
    onBlur: onBlur && (() => fireNonCancelableEvent(onBlur)),
    onFocus: onFocus && (() => fireNonCancelableEvent(onFocus))
  };
  if (disableBrowserAutocorrect) {
    attributes.autoCorrect = "off";
    attributes.autoCapitalize = "off";
  }
  if (disableBrowserSpellcheck) {
    attributes.spellCheck = "false";
  }
  return import_react.default.createElement(
    "span",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, baseProps.className), ref: __internalRootRef }),
    import_react.default.createElement("textarea", Object.assign({ ref: textareaRef, id: controlId }, attributes))
  );
});
applyDisplayName(Textarea, "Textarea");
var textarea_default = Textarea;

export {
  textarea_default
};
//# sourceMappingURL=chunk-ZDVJ333D.js.map

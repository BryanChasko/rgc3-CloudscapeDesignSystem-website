import {
  styles_css_default
} from "./chunk-PFKSO5SI.js";
import {
  LinkDefaultVariantContext
} from "./chunk-CGX6IJLX.js";
import {
  AnalyticsFunnel,
  AnalyticsFunnelStep
} from "./chunk-6LZAGYP5.js";
import {
  useContainerBreakpoints
} from "./chunk-BESADZDS.js";
import {
  InternalContentLayout
} from "./chunk-CQRL6DUI.js";
import {
  awsuiPluginsInternal,
  createUseDiscoveredAction
} from "./chunk-ZPYXPLK6.js";
import {
  VisualContext
} from "./chunk-CG2QVKT3.js";
import {
  useInternalI18n
} from "./chunk-VCW6C342.js";
import {
  InternalBox
} from "./chunk-7DUUH5PQ.js";
import {
  ButtonContext,
  InternalButton,
  internal_default as internal_default2
} from "./chunk-DPGYCRGF.js";
import {
  live_region_default
} from "./chunk-ESFEWRKR.js";
import {
  useForwardFocus
} from "./chunk-YTRJQH4M.js";
import {
  fireNonCancelableEvent
} from "./chunk-T3BYYNEM.js";
import {
  FunnelMetrics,
  useFunnel,
  useFunnelNameSelector,
  useFunnelStep
} from "./chunk-GC32QG33.js";
import {
  DATA_ATTR_ANALYTICS_ALERT
} from "./chunk-37SB7DJX.js";
import {
  internal_default
} from "./chunk-NUCDU4ZC.js";
import {
  useMergeRefs
} from "./chunk-NYW4WZSZ.js";
import {
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  useBaseComponent,
  useVisualRefresh
} from "./chunk-CHBULPAM.js";
import {
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/@cloudscape-design/components/form/index.js
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/form/internal.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/alert/internal.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/alert/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/alert/styles.scoped.css";
var styles_css_default2 = {
  "alert": "awsui_alert_mx3cw_ipfn3_99",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_mx3cw_ipfn3_1",
  "root": "awsui_root_mx3cw_ipfn3_125",
  "hidden": "awsui_hidden_mx3cw_ipfn3_163",
  "with-dismiss": "awsui_with-dismiss_mx3cw_ipfn3_213",
  "with-action": "awsui_with-action_mx3cw_ipfn3_213",
  "breakpoint-default": "awsui_breakpoint-default_mx3cw_ipfn3_219",
  "header": "awsui_header_mx3cw_ipfn3_226",
  "action": "awsui_action_mx3cw_ipfn3_230",
  "action-slot": "awsui_action-slot_mx3cw_ipfn3_235",
  "action-button": "awsui_action-button_mx3cw_ipfn3_236",
  "alert-focus-wrapper": "awsui_alert-focus-wrapper_mx3cw_ipfn3_240",
  "text": "awsui_text_mx3cw_ipfn3_269",
  "icon": "awsui_icon_mx3cw_ipfn3_276",
  "message": "awsui_message_mx3cw_ipfn3_279",
  "icon-size-medium": "awsui_icon-size-medium_mx3cw_ipfn3_287",
  "icon-size-big": "awsui_icon-size-big_mx3cw_ipfn3_290",
  "icon-size-normal": "awsui_icon-size-normal_mx3cw_ipfn3_293",
  "content": "awsui_content_mx3cw_ipfn3_297",
  "dismiss": "awsui_dismiss_mx3cw_ipfn3_301",
  "dismiss-button": "awsui_dismiss-button_mx3cw_ipfn3_306",
  "type-error": "awsui_type-error_mx3cw_ipfn3_310",
  "type-warning": "awsui_type-warning_mx3cw_ipfn3_318",
  "type-success": "awsui_type-success_mx3cw_ipfn3_326",
  "type-info": "awsui_type-info_mx3cw_ipfn3_334"
};

// node_modules/@cloudscape-design/components/alert/actions-wrapper/index.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/alert/actions-wrapper/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/alert/actions-wrapper/styles.scoped.css";
var styles_css_default3 = {
  "root": "awsui_root_37gf8_14wux_9"
};

// node_modules/@cloudscape-design/components/alert/actions-wrapper/index.js
function createActionButton(testUtilClasses, action, buttonText, onButtonClick) {
  if (!action && buttonText) {
    action = import_react.default.createElement(internal_default2, { className: testUtilClasses.actionButton, onClick: onButtonClick, formAction: "none" }, buttonText);
  }
  return action ? import_react.default.createElement("div", { className: testUtilClasses.actionSlot }, action) : null;
}
function ActionsWrapper({ className, testUtilClasses, action, discoveredActions, buttonText, onButtonClick }) {
  const actionButton = createActionButton(testUtilClasses, action, buttonText, onButtonClick);
  if (!actionButton && discoveredActions.length === 0) {
    return null;
  }
  return import_react.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default3.root, className) },
    actionButton,
    discoveredActions
  );
}

// node_modules/@cloudscape-design/components/alert/internal.js
var typeToIcon = {
  error: "status-negative",
  warning: "status-warning",
  success: "status-positive",
  info: "status-info"
};
var useDiscoveredAction = createUseDiscoveredAction(awsuiPluginsInternal.alert.onActionRegistered);
var InternalAlert = import_react2.default.forwardRef((_a, ref) => {
  var { type, statusIconAriaLabel, visible = true, dismissible, dismissAriaLabel, children, header, buttonText, action, onDismiss, onButtonClick, __internalRootRef = null } = _a, rest = __rest(_a, ["type", "statusIconAriaLabel", "visible", "dismissible", "dismissAriaLabel", "children", "header", "buttonText", "action", "onDismiss", "onButtonClick", "__internalRootRef"]);
  const baseProps = getBaseProps(rest);
  const i18n = useInternalI18n("alert");
  const focusRef = (0, import_react2.useRef)(null);
  useForwardFocus(ref, focusRef);
  const [breakpoint, breakpointRef] = useContainerBreakpoints(["xs"]);
  const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);
  const isRefresh = useVisualRefresh();
  const size = isRefresh ? "normal" : header && children ? "big" : "normal";
  const { discoveredActions, headerRef, contentRef } = useDiscoveredAction(type);
  const hasAction = Boolean(action || buttonText || discoveredActions.length);
  const analyticsAttributes = {
    [DATA_ATTR_ANALYTICS_ALERT]: type
  };
  return import_react2.default.createElement(
    "div",
    Object.assign({}, baseProps, analyticsAttributes, { "aria-hidden": !visible, className: clsx_m_default(styles_css_default2.root, { [styles_css_default2.hidden]: !visible }, baseProps.className), ref: mergedRef }),
    import_react2.default.createElement(
      LinkDefaultVariantContext.Provider,
      { value: { defaultVariant: "primary" } },
      import_react2.default.createElement(
        VisualContext,
        { contextName: "alert" },
        import_react2.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default2.alert, styles_css_default2[`type-${type}`], styles_css_default2[`icon-size-${size}`], hasAction && styles_css_default2["with-action"], dismissible && styles_css_default2["with-dismiss"], styles_css_default2[`breakpoint-${breakpoint}`]) },
          import_react2.default.createElement(
            "div",
            { className: styles_css_default2["alert-focus-wrapper"], tabIndex: -1, ref: focusRef },
            import_react2.default.createElement(
              "div",
              { className: clsx_m_default(styles_css_default2.icon, styles_css_default2.text), role: "img", "aria-label": statusIconAriaLabel },
              import_react2.default.createElement(internal_default, { name: typeToIcon[type], size })
            ),
            import_react2.default.createElement(
              "div",
              { className: clsx_m_default(styles_css_default2.message, styles_css_default2.text) },
              header && import_react2.default.createElement("div", { className: styles_css_default2.header, ref: headerRef }, header),
              import_react2.default.createElement("div", { className: styles_css_default2.content, ref: contentRef }, children)
            )
          ),
          import_react2.default.createElement(ActionsWrapper, { className: styles_css_default2.action, testUtilClasses: {
            actionSlot: styles_css_default2["action-slot"],
            actionButton: styles_css_default2["action-button"]
          }, action, discoveredActions, buttonText, onButtonClick: () => fireNonCancelableEvent(onButtonClick) }),
          dismissible && import_react2.default.createElement(
            "div",
            { className: styles_css_default2.dismiss },
            import_react2.default.createElement(InternalButton, { className: styles_css_default2["dismiss-button"], variant: "icon", iconName: "close", formAction: "none", ariaLabel: i18n("dismissAriaLabel", dismissAriaLabel), onClick: () => fireNonCancelableEvent(onDismiss) })
          )
        )
      )
    )
  );
});
var internal_default3 = InternalAlert;

// node_modules/@cloudscape-design/components/form/styles.css.js
import "/home/bryanchasko/code/rgc3/node_modules/@cloudscape-design/components/form/styles.scoped.css";
var styles_css_default4 = {
  "root": "awsui_root_1i0s3_19kut_99",
  "header": "awsui_header_1i0s3_19kut_134",
  "full-page": "awsui_full-page_1i0s3_19kut_134",
  "content": "awsui_content_1i0s3_19kut_138",
  "error": "awsui_error_1i0s3_19kut_142",
  "footer": "awsui_footer_1i0s3_19kut_146",
  "actions-section": "awsui_actions-section_1i0s3_19kut_150",
  "secondary-actions": "awsui_secondary-actions_1i0s3_19kut_159",
  "actions": "awsui_actions_1i0s3_19kut_150"
};

// node_modules/@cloudscape-design/components/form/internal.js
function InternalForm(_a) {
  var { children, header, errorText, errorIconAriaLabel: errorIconAriaLabelOverride, actions, secondaryActions, variant, __internalRootRef } = _a, props = __rest(_a, ["children", "header", "errorText", "errorIconAriaLabel", "actions", "secondaryActions", "variant", "__internalRootRef"]);
  const baseProps = getBaseProps(props);
  const i18n = useInternalI18n("form");
  const errorIconAriaLabel = i18n("errorIconAriaLabel", errorIconAriaLabelOverride);
  const { funnelInteractionId, submissionAttempt, errorCount } = useFunnel();
  (0, import_react3.useEffect)(() => {
    if (funnelInteractionId && errorText) {
      errorCount.current++;
      FunnelMetrics.funnelError({ funnelInteractionId });
      return () => {
        errorCount.current--;
      };
    }
  }, [funnelInteractionId, errorText, submissionAttempt, errorCount]);
  return import_react3.default.createElement(
    "div",
    Object.assign({}, baseProps, { ref: __internalRootRef, className: clsx_m_default(styles_css_default4.root, baseProps.className) }),
    import_react3.default.createElement(
      FormLayout,
      { header: header && import_react3.default.createElement("div", { className: clsx_m_default(styles_css_default4.header, variant === "full-page" && styles_css_default4["full-page"]) }, header), variant },
      children && import_react3.default.createElement("div", { className: styles_css_default4.content }, children),
      errorText && import_react3.default.createElement(
        InternalBox,
        { margin: { top: "l" } },
        import_react3.default.createElement(
          internal_default3,
          { type: "error", statusIconAriaLabel: errorIconAriaLabel },
          import_react3.default.createElement("div", { className: styles_css_default4.error }, errorText)
        )
      ),
      (actions || secondaryActions) && import_react3.default.createElement(
        "div",
        { className: styles_css_default4.footer },
        import_react3.default.createElement(
          "div",
          { className: styles_css_default4["actions-section"] },
          actions && import_react3.default.createElement("div", { className: styles_css_default4.actions }, actions),
          secondaryActions && import_react3.default.createElement("div", { className: styles_css_default4["secondary-actions"] }, secondaryActions)
        )
      ),
      errorText && import_react3.default.createElement(
        live_region_default,
        { assertive: true },
        errorIconAriaLabel,
        ", ",
        errorText
      )
    )
  );
}
function FormLayout({ children, header, variant }) {
  return variant === "full-page" && header ? import_react3.default.createElement(InternalContentLayout, { header }, children) : import_react3.default.createElement(
    import_react3.default.Fragment,
    null,
    header,
    children
  );
}

// node_modules/@cloudscape-design/components/form/index.js
var FormWithAnalytics = (_a) => {
  var { variant = "full-page", actions } = _a, props = __rest(_a, ["variant", "actions"]);
  const { funnelProps, funnelSubmit, funnelNextOrSubmitAttempt } = useFunnel();
  const { funnelStepProps } = useFunnelStep();
  const handleActionButtonClick = ({ variant: variant2 }) => {
    if (variant2 === "primary") {
      funnelNextOrSubmitAttempt();
      funnelSubmit();
    }
  };
  return import_react4.default.createElement(
    ButtonContext.Provider,
    { value: { onClick: handleActionButtonClick } },
    import_react4.default.createElement(InternalForm, Object.assign({ variant, actions }, props, funnelProps, funnelStepProps))
  );
};
function Form(_a) {
  var { variant = "full-page" } = _a, props = __rest(_a, ["variant"]);
  const baseComponentProps = useBaseComponent("Form", {
    props: { variant }
  });
  const inheritedFunnelNameSelector = useFunnelNameSelector();
  const funnelNameSelector = inheritedFunnelNameSelector || `.${styles_css_default["heading-text"]}`;
  return import_react4.default.createElement(
    AnalyticsFunnel,
    { funnelType: "single-page", optionalStepNumbers: [], totalFunnelSteps: 1, funnelNameSelectors: [funnelNameSelector, `.${styles_css_default4.header}`] },
    import_react4.default.createElement(
      AnalyticsFunnelStep,
      { stepNumber: 1 },
      import_react4.default.createElement(FormWithAnalytics, Object.assign({ variant }, props, baseComponentProps))
    )
  );
}
applyDisplayName(Form, "Form");

export {
  ActionsWrapper,
  internal_default3 as internal_default,
  InternalForm,
  Form
};
//# sourceMappingURL=chunk-I2QNJ4XQ.js.map
